# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import user_pb2 as user__pb2


class UserStub(object):
  """The chat service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.AddUser = channel.unary_stream(
        '/user.User/AddUser',
        request_serializer=user__pb2.UserName.SerializeToString,
        response_deserializer=user__pb2.UserName.FromString,
        )
    self.RemoveUser = channel.unary_stream(
        '/user.User/RemoveUser',
        request_serializer=user__pb2.UserName.SerializeToString,
        response_deserializer=user__pb2.UserName.FromString,
        )


class UserServicer(object):
  """The chat service definition.
  """

  def AddUser(self, request, context):
    """This bi-directional stream makes it possible to send and receive Notes between 2 persons
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RemoveUser(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_UserServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'AddUser': grpc.unary_stream_rpc_method_handler(
          servicer.AddUser,
          request_deserializer=user__pb2.UserName.FromString,
          response_serializer=user__pb2.UserName.SerializeToString,
      ),
      'RemoveUser': grpc.unary_stream_rpc_method_handler(
          servicer.RemoveUser,
          request_deserializer=user__pb2.UserName.FromString,
          response_serializer=user__pb2.UserName.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'user.User', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
