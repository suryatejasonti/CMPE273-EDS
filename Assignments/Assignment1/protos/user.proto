syntax = "proto3";

package user;
// The chat service definition.
service User {
  
  // This bi-directional stream makes it possible to send and receive Notes between 2 persons
  rpc AddUser(UserName) returns (stream UserName);
  rpc RemoveUser(UserName) returns (stream UserName);

}
//The request message containing empty value
message Empty {
  
}
// The request message containing users list
message UserName {
  string name=1;
}
// The request message containing users grouped in chat
message Group {
  message Users {
    repeated string user = 1;
  }
  map<string, Users> groups = 1;
}
//Suryas-MacBook-Pro:lab3 suryasonti$ python3 -m grpc_tools.protoc -Iprotos/ --python_out=. --grpc_python_out=. protos/user.proto
//python3 -m grpc_tools.protoc -Iprotos/ --python_out=. --grpc_python_out=. protos/user.proto